"use client";

import { useState } from "react";
import { db } from "@/lib/firebase"; // your firebase.js config
import { collection, addDoc } from "firebase/firestore";

export default function RSVPPage() {
  const [formData, setFormData] = useState({ name: "", contact: "", attending: "yes" });
  const [submitted, setSubmitted] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    try {
      await addDoc(collection(db, "rsvps"), {
        ...formData,
        createdAt: new Date(),
      });

      setSubmitted(true);
      setFormData({ name: "", contact: "", attending: "yes" }); // reset form
    } catch (error) {
      console.error("Error submitting RSVP:", error);
    }
  };

  return (
    <section className="max-w-2xl mx-auto py-16 px-6 text-center">
      <h1 className="text-4xl font-bold mb-6">RSVP / Ph·∫£n h·ªìi</h1>
      <p className="mb-8 text-lg text-gray-600">
        Please let us know if you‚Äôll be joining our special day <br />
        Vui l√≤ng cho ch√∫ng t√¥i bi·∫øt n·∫øu b·∫°n s·∫Ω tham d·ª± ng√†y ƒë·∫∑c bi·ªát c·ªßa ch√∫ng t√¥i
      </p>

      {!submitted ? (
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Full Name */}
          <div>
            <input
              type="text"
              placeholder="Your Full Name / H·ªç v√† t√™n"
              required
              value={formData.name}
              onChange={(e) => setFormData({ ...formData, name: e.target.value })}
              className="w-full border border-gray-300 p-3 text-lg"
            />
          </div>

          {/* Contact (email or phone) */}
          <div>
            <input
              type="text"
              placeholder="Email or Phone Number / Email ho·∫∑c S·ªë ƒëi·ªán tho·∫°i"
              required
              value={formData.contact}
              onChange={(e) => setFormData({ ...formData, contact: e.target.value })}
              className="w-full border border-gray-300 p-3 text-lg"
            />
          </div>

          {/* Attendance */}
          <div>
            <select
              value={formData.attending}
              onChange={(e) => setFormData({ ...formData, attending: e.target.value })}
              className="w-full border border-gray-300 p-3 text-lg"
            >
              <option value="yes">‚úÖ I will be there / T√¥i s·∫Ω tham d·ª±</option>
              <option value="no">‚ùå Sorry, I cannot attend / Xin l·ªói, t√¥i kh√¥ng th·ªÉ tham d·ª±</option>
            </select>
          </div>

          {/* Submit */}
          <button
            type="submit"
            className="w-50 border border-black py-3 text-lg hover:bg-black hover:text-white transition"
          >
            Submit RSVP / G·ª≠i ph·∫£n h·ªìi
          </button>
        </form>
      ) : (
        <p className="text-xl text-green-600 font-semibold">
          üéâ Thank you for your RSVP! <br />
          üéâ C·∫£m ∆°n b·∫°n ƒë√£ ph·∫£n h·ªìi!
        </p>
      )}
    </section>
  );
}
